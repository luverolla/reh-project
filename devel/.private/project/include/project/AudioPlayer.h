// Generated by gencpp from file project/AudioPlayer.msg
// DO NOT EDIT!


#ifndef PROJECT_MESSAGE_AUDIOPLAYER_H
#define PROJECT_MESSAGE_AUDIOPLAYER_H

#include <ros/service_traits.h>


#include <project/AudioPlayerRequest.h>
#include <project/AudioPlayerResponse.h>


namespace project
{

struct AudioPlayer
{

typedef AudioPlayerRequest Request;
typedef AudioPlayerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AudioPlayer
} // namespace project


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::project::AudioPlayer > {
  static const char* value()
  {
    return "773c9cd39742097a22777897dedef274";
  }

  static const char* value(const ::project::AudioPlayer&) { return value(); }
};

template<>
struct DataType< ::project::AudioPlayer > {
  static const char* value()
  {
    return "project/AudioPlayer";
  }

  static const char* value(const ::project::AudioPlayer&) { return value(); }
};


// service_traits::MD5Sum< ::project::AudioPlayerRequest> should match
// service_traits::MD5Sum< ::project::AudioPlayer >
template<>
struct MD5Sum< ::project::AudioPlayerRequest>
{
  static const char* value()
  {
    return MD5Sum< ::project::AudioPlayer >::value();
  }
  static const char* value(const ::project::AudioPlayerRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::project::AudioPlayerRequest> should match
// service_traits::DataType< ::project::AudioPlayer >
template<>
struct DataType< ::project::AudioPlayerRequest>
{
  static const char* value()
  {
    return DataType< ::project::AudioPlayer >::value();
  }
  static const char* value(const ::project::AudioPlayerRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::project::AudioPlayerResponse> should match
// service_traits::MD5Sum< ::project::AudioPlayer >
template<>
struct MD5Sum< ::project::AudioPlayerResponse>
{
  static const char* value()
  {
    return MD5Sum< ::project::AudioPlayer >::value();
  }
  static const char* value(const ::project::AudioPlayerResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::project::AudioPlayerResponse> should match
// service_traits::DataType< ::project::AudioPlayer >
template<>
struct DataType< ::project::AudioPlayerResponse>
{
  static const char* value()
  {
    return DataType< ::project::AudioPlayer >::value();
  }
  static const char* value(const ::project::AudioPlayerResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PROJECT_MESSAGE_AUDIOPLAYER_H
